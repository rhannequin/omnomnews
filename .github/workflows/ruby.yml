name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgresql:
        image: postgres:11.5
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        ruby: [ '2.7' ]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Ruby ${{ matrix.ruby }}
      uses: actions/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}

    - name: Install PostgreSQL 11 client
      run: |
          sudo apt-get -yqq install libpq-dev

    - name: Build App
      env:
        DATABASE_URL: postgres://postgres:@localhost:5432/test
        RAILS_ENV: test
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      run: |
        gem install bundler
        yarn install
        bundle install --jobs 4 --retry 3
        bundle exec rails db:prepare

    - name: Webpack compilation
      run: NODE_ENV=test bundle exec rails webpacker:compile

    - name: Run Tests
      env:
        DATABASE_URL: postgres://postgres:@localhost:5432/test
        RAILS_ENV: test
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      run: |
        COVERAGE=true bundle exec rspec

    - name: Check database constraints consistency
      env:
        DATABASE_URL: postgres://postgres:@localhost:5432/test
        RAILS_ENV: test
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      run: |
        bundle exec database_consistency

    - name: Check code guidelines
      run: bundle exec rubocop

    - name: Run coverage analysis
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: coverage-report
        path: coverage
